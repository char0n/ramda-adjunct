name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
        env:
          DISABLE_OPENCOLLECTIVE: true
      - run: npm run lint
      - name: Run FOSSA scan and upload build data
        uses: fossa-contrib/fossa-action@v1
        with:
          fossa-api-key: ccf8289006445461c967cb7874f84a8a
      - run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_artifacts
          path: |
            ./dist
            ./lib
            ./es

  test:
    runs-on: ubuntu-latest

    needs: [build]

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
        env:
          DISABLE_OPENCOLLECTIVE: true
      - run: npm run test
      - run: npm run test:web
      - run: npm run test:ramda
      - run: npm run test:types

  code_coverage:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
        env:
          DISABLE_OPENCOLLECTIVE: true
      - name: Code coverage
        run: npm run coverage
      - name: Upload coverage report to codecov.io
        if: github.ref == 'refs/heads/master'
        uses: codecov/codecov-action@v1
        with:
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: true
          verbose: true
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            ./coverage
            ./test-results.xml

  docs:
    runs-on: ubuntu-latest
    needs: [build, test, code_coverage]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
        env:
          DISABLE_OPENCOLLECTIVE: true
      - run: npm run build:umd
      - run: npm run docs
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/ramda-adjunct # The folder the action should deploy.
          CLEAN: false # Automatically remove deleted files from the deploy branch
      - name: Upload docs artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./docs
